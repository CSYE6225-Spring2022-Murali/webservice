name: After Merge
env:
  AWS_REGION: us-east-1
  CODEDEPLOY_APPLICATION_NAME: csye6225-webapp
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: csye6225-webapp-deployment
  ARTIFACT_NAME: webservice-${{ github.sha }}.zip
on:
  push:
    branches: 
    - main
jobs:
  build:
    name: on-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 14.x
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Node Packages
      run: npm ci
    - name: Zip dependency file
      run: zip -r ${{ env.ARTIFACT_NAME }} .
    # - name: Zip dependency file
    #   run: zip -r webservice.zip .
    # - name: Packer Init
    #   uses: hashicorp/packer-github-actions@master
    #   with:
    #     command: init
    #     target: ami-builder.pkr.hcl
    # - name: Packer Validate
    #   uses: hashicorp/packer-github-actions@master
    #   with:
    #     command: validate
    #     target: ami-builder.pkr.hcl
    # - name: Packer Build
    #   uses: hashicorp/packer-github-actions@master
    #   with:
    #     command: build
    #     arguments: -var=AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -var=AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     target: ami-builder.pkr.hcl
    - name: Install AWS Cli
      run: sudo pip install awscli
    - name: Build deployment artifacts
      run: |
        mkdir codedeploy_artifact
        mv ${{ env.ARTIFACT_NAME }} codedeploy_artifact/
        pwd
        cd codedeploy_artifact
        pwd
        ls -al
    - name: Set AWS environment
      run: |
        aws configure set region us-east-1
        aws configure set aws_access_key_id ${{ secrets.AWS_GHUSER_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_GHUSER_SECRET_ACCESS_KEY }}
    - name: Copy artifacts to S3
      run: |
        aws deploy push --application-name csye6225-webapp --s3-location s3://${{ secrets.AWS_BUCKET }}/${{ env.ARTIFACT_NAME }}
    - name: CodeDeploy 
      run: |
        output=$(aws deploy create-deployment \
          --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME }} \
          --description "CSYE6255 - CodeDeploy" \
          --s3-location bucket=${{ secrets.AWS_BUCKET }},key=${{ env.ARTIFACT_NAME }},bundleType=zip \
          --region ${{ env.AWS_REGION }} \
          --output json)

          echo $output

          dId=${ echo $output | jq -r '.deploymentId' }

          aws deploy wait deployment-successful --deployment-id $dId